const mongoose = require("mongoose");
const { Schema } = mongoose;

const userDetailsSchema = new Schema({
Â  user: {
Â  Â  type: mongoose.SchemaTypes.ObjectId,
Â  Â  ref: "User",
Â  Â  required: true,
Â  },
Â  authToken: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  userName: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  selectedMonth: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  selectedDay: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  selectedYear: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  height: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  currentWeight: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  targetWeight: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "",
Â  },
Â  selectedSubGoals: {
Â  Â  type: [String],
Â  Â  required: true,
Â  Â  default: [],
Â  },
Â  selectedHabits: {
Â  Â  type: [Number],
Â  Â  required: true,
Â  Â  default: [],
Â  },
Â  activityLevels: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  scheduleIcons: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  // âœ… This structure is correct for fetching your health data
Â  healthConcerns: {
Â  Â  type: Map,
Â  Â  of: Boolean,
Â  Â  required: true,
Â  Â  default: {},
Â  },
Â  levels: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  options: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  mealOptions: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  waterOptions: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  default: "{}",
Â  },
Â  // âœ… This structure is correct for fetching your restrictions
Â  restrictions: {
Â  Â  type: Map,
Â  Â  of: Schema.Types.Mixed,
Â  Â  required: true,
Â  Â  default: {},
Â  },
Â  eatingStyles: {
Â  Â  type: Map,
Â  Â  of: Schema.Types.Mixed,
Â  Â  required: true,
Â  Â  default: {},
Â  },
Â  startTimes: {
Â  Â  type: [
Â  Â  Â  {
Â  Â  Â  Â  type: Map,
Â  Â  Â  Â  of: Schema.Types.Mixed,
Â  Â  Â  },
Â  Â  ],
Â  Â  required: true,
Â  Â  default: [],
Â  },
Â  endTimes: {
Â  Â  type: [
Â  Â  Â  {
Â  Â  Â  Â  type: Map,
Â  Â  Â  Â  of: Schema.Types.Mixed,
Â  Â  Â  },
Â  Â  ],
Â  Â  required: true,
Â  Â  default: [],
Â  },
});

// ðŸ”¥ CRITICAL FIX: The export handles the compilation conditionally
module.exports = mongoose.models.UserDetails 
Â  ? mongoose.model('UserDetails') 
Â  : mongoose.model('UserDetails', userDetailsSchema);